# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD using github actions & docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for Gradle
      run: chmod +x ./gradlew

    - name: Build JAR
      run: ./gradlew clean build -x test

    - name: Set artifact
      run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t zks145/automessage:${{ github.sha }} .
        echo "DOCKER_IMAGE=zks145/automessage:${{ github.sha }}" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker push ${{ env.DOCKER_IMAGE }}

    - name: Set up SSH connection
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        ssh: true

    - name: SSH into Synology NAS and deploy
      env:
        NAS_USERNAME: ${{ secrets.NAS_USERNAME }}
        NAS_PASSWORD: ${{ secrets.NAS_PASSWORD }}
        NAS_HOST: ${{ secrets.NAS_HOST }}
      run: |
        sshpass -p "$NAS_PASSWORD" ssh -o StrictHostKeyChecking=no $NAS_USERNAME@$NAS_HOST << EOF
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull ${{ env.DOCKER_IMAGE }}
          docker stop automessage || true
          docker rm automessage || true
          docker run -d --name automessage -p 8002:8002 ${{ env.DOCKER_IMAGE }}
        EOF

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
