name: CI/CD using github actions & docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build JAR
        run: ./gradlew clean build -x test

      - name: Set artifact
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t zks145/automessage:${{ github.sha }} .
          echo "DOCKER_IMAGE=zks145/automessage:${{ github.sha }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push ${{ env.DOCKER_IMAGE }}

      - name: Set up environment variables
        run: |
          echo "ACCESS_KEY=${{ secrets.ACCESS_KEY }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "SERVICE_ID=${{ secrets.SERVICE_ID }}" >> $GITHUB_ENV
          echo "PHONE=${{ secrets.PHONE }}" >> $GITHUB_ENV

      - name: Run service
        run: ./gradlew run -PaccessKey=${{ secrets.ACCESS_KEY }} -PsecretKey=${{ secrets.SECRET_KEY }} -PserviceId=${{ secrets.SERVICE_ID }} -Pphone=${{ secrets.PHONE }}

      - name: Set up SSH connection
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh: true

      - name: SSH into Synology NAS and deploy
        env:
          NAS_USERNAME: ${{ secrets.NAS_USERNAME }}
          NAS_PASSWORD: ${{ secrets.NAS_PASSWORD }}
          NAS_HOST: ${{ secrets.NAS_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_URL: ${{ secrets.DB_URL }}
        run: |
          sshpass -p "$NAS_PASSWORD" ssh -o StrictHostKeyChecking=no $NAS_USERNAME@$NAS_HOST << EOF
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ env.DOCKER_IMAGE }}
            docker stop automessage || true
            docker rm automessage || true
            docker run -d --name automessage -e SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD -e SPRING_DATASOURCE_URL=$DB_URL -e SPRING_DATASOURCE_USERNAME=$DB_USERNAME -p 8002:8002 ${{ env.DOCKER_IMAGE }}
          EOF

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
